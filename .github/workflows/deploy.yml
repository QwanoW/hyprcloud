name: Deploy Laravel to VPS

on:
  push:
    branches: [main]

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup SSH
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: Deploy to Server
        run: |
          # Force the remote server to execute our script with 'bash'.
          # This is the most reliable way to run scripts over SSH in automation.
          ssh -T -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} 'bash -s' << 'EOF'
            # Stop on any error and print commands before execution (for debugging)
            set -ex

            echo "--- Deployment started on $(hostname) ---"

            # Navigate to the project directory
            cd /var/www/hyprcloud

            echo "--- Pulling latest code from main branch ---"
            git pull origin main

            echo "--- Installing PHP dependencies with Composer ---"
            # Using --no-progress to reduce log noise
            composer install --no-dev --optimize-autoloader --no-interaction --no-progress

            echo "--- Installing Node dependencies and building assets ---"
            # Check for Bun first, then fall back to npm
            if command -v $HOME/.bun/bin/bun &> /dev/null; then
              echo "Using Bun for frontend build"
              $HOME/.bun/bin/bun install --frozen-lockfile
              $HOME/.bun/bin/bun run build
            elif command -v npm &> /dev/null; then
              echo "Using npm for frontend build"
              # 'npm ci' is faster and more reliable for CI/CD
              npm ci
              npm run build
            else
              echo "Neither Bun nor npm found, skipping frontend build."
            fi

            echo "--- Running Laravel optimization commands ---"
            php artisan migrate --force
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            php artisan event:cache

            # Check if storage link already exists before creating
            if [ ! -L "public/storage" ]; then
                echo "Creating storage link."
                php artisan storage:link
            else
                echo "Storage link already exists."
            fi

            echo "--- Restarting services (requires passwordless sudo) ---"
            # This command relies on configuring passwordless sudo on your server
            # for this specific user and command.
            sudo systemctl reload php8.4-fpm

            echo "--- Deployment completed successfully ---"
          EOF
